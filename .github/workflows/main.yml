name: CI

on:
  push:
  workflow_dispatch:
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle
          
      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build
          ls -lah $GITHUB_WORKSPACE/build/libs/
          
      - name: Archive artifact java app
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: java-app
          path: build/libs/testing-web-0.0.1-SNAPSHOT.jar

  sonarcloud:
    name: Analyze SonarCloud
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Analyze SonarCloud
        run: |
          chmod +x gradlew
          #./gradlew jacocoTestReport sonar -Dsonar.login=${{ secrets.TOKEN_SONARCLOUD }} --info --stacktrace
   
  jmeter:
    name: Execute Jmeter
    runs-on: ubuntu-latest
    needs: sonarcloud
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Apache JMeter
        run: |
          curl -LJO https://downloads.apache.org/jmeter/binaries/apache-jmeter-5.6.2.tgz
          tar -xvzf apache-jmeter-5.6.2.tgz

      #- name: Run JMeter tests
      #  run: |
      #    ./path/to/apache-jmeter/bin/jmeter.sh -n -t Jmeter/scripts/testscript.jmx -l Jmeter/resultados/testresult.jtl
                
  postman:
    name: Execute Postman
    runs-on: ubuntu-latest
    needs: sonarcloud
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact java app
        uses: actions/download-artifact@v3
        with:
          name: java-app
          path: .

      - name: Download Node.js And Newman
        run: |
          sudo apt-get install -y nodejs
          npm install -g newman

      - name: Run Postman tests
        run: |
          chmod +x bash/scripts/wait_application.sh
          ./bash/scripts/wait_for_application.sh
          curl -I http://localhost:8080/
          kill -SIGTERM $(ps aux | grep "java -jar testing-w" | awk '{print $2}')
      #    newman run Postman/scripts/pruebas_Aceptacion.postman_collection.json
  
  dockerbuild:
    name: Docker build
    runs-on: ubuntu-latest
    needs:
      - postman
      - jmeter
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Docker login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download artifact java app
        uses: actions/download-artifact@v3
        with:
          name: java-app
          path: .
          
      - name: Docker build
        run: |
          chmod 755 testing-web-0.0.1-SNAPSHOT.jar
          ls -lah
          docker build --tag lobozoldick/microservicio-java:latest .
          docker images

      - name: Docker push
        run: |
          docker push lobozoldick/microservicio-java
         
  deploy:
    name: Docker Deployment
    runs-on: self-hosted
    needs: dockerbuild
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Deploy to Minikube
        run: |
          kubectl apply -f deployment.yml
